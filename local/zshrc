# use vim as the visual editor
export VISUAL='vim'
export EDITOR=$VISUAL

# Path to my oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

BASE="$HOME/.zsh"
for file in "$BASE/$1"/*.zsh; do
  source "$file"
done

ZSH_THEME="robbyrussell"
test -f ~/.oh-my-zsh/custom/themes/elena.zsh-theme && ZSH_THEME="elena"

# Chruby
source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh
source $(brew --prefix)/opt/chruby/share/chruby/auto.sh
chruby ruby-3.1.0

# Yarn
export PATH="$PATH:`yarn global bin`"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

# goenv
export GOENV_ROOT="$HOME/.goenv"
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"

export PATH="$GOROOT/bin:$PATH"
export PATH="$PATH:$GOPATH/bin"

# Pyenv
eval "$(pyenv init -)"

# Fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

. ~/.zshenv


#
# Run 'nvm use' automatically every time there's
# a .nvmrc file in the directory. Also, revert to default
# version when entering a directory without .nvmrc
#
enter_directory() {
if [[ $PWD == $PREV_PWD ]]; then
 return
fi
PREV_PWD=$PWD
if [[ -f ".nvmrc" ]]; then
   nvm use
   NVM_DIRTY=true
elif [[ $NVM_DIRTY = true ]]; then
   nvm use default
   NVM_DIRTY=false
fi
}


export PROMPT_COMMAND=enter_directory


# Added by serverless binary installer
export PATH="$HOME/.serverless/bin:$PATH"

[ -z "$SSH_AUTH_SOCK" ] && eval "$(ssh-agent -s)"

source $ZSH/oh-my-zsh.sh
